package CreepsController

import HashList
import HashMap
import LinkedList

import CreepsFactory

public class CreepsController
	constant creepToLevelList = new IterableMap<int, int>()
	constant warlordsToLevelList = new IterableMap<int, int>()
	constant bossesToLevelList = new IterableMap<int, int>()
	constant warlordsToMapList = new IterableMap<int, int>()

	construct(CreepsFactory factory)
		let itr = factory.creepsList.iterator()
		for c from itr
			creepToLevelList.put(c.id, c.level)
		itr.close()

		let itr2 = factory.warlordsList.iterator()
		for c from itr2
			warlordsToLevelList.put(c.id, c.level)
		itr2.close()

		let itr3 = factory.bossesList.iterator()
		for c from itr3
			bossesToLevelList.put(c.id, c.level)
		itr3.close()


		let itr4 = factory.warlordsList.iterator()
		for c from itr4
			warlordsToMapList.put(c.id, c.onMapId)
		itr4.close()

		let itr5 = factory.bossesList.iterator()
		for c from itr5
			warlordsToMapList.put(c.id, c.onMapId)
		itr5.close()

	private function getRandomUnitOfLevel(IterableMap<int, int> hMap, int level, int min, int max) returns int
		let iterator = hMap.iterator()
		let minLvl = level + min
		let maxLvl = level + max
		let list = new LinkedList<int>()
		for uId from iterator
			let lvl = hMap.get(uId)
			if lvl >= minLvl and lvl <= maxLvl
				list.add(uId)
		iterator.close()
		if list.size() == 0
			return hMap.get(0)
		else
			return list..shuffle().get(0)

	function getRandomWarlordIdOfLevel(int level) returns int
		return getRandomUnitOfLevel(warlordsToLevelList, level, 2, 4)

	function getRandomRegularIdOfLevel(int level) returns int
		return getRandomUnitOfLevel(creepToLevelList, level, 2, 4)

	function getRandomBossIdOfLevel(int level) returns int
		int rUnitId = getRandomUnitOfLevel(bossesToLevelList, level, 0, 5)
		if rUnitId != 0
			return rUnitId
		else
			return getRandomUnitOfLevel(bossesToLevelList, level, 0, 100)

	function getWarlordOnMapById(int warlordId) returns int
		return warlordsToMapList.get(warlordId)

