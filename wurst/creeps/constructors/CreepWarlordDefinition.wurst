package CreepWarlordDefinition

import HashMap
import UnitObjEditing
import CreepDefinition

public class CreepWarlordDefinition extends CreepDefinition
	constant IterableMap<string, string> props = new IterableMap<string, string>()
	int onMapUnitId
	int guardItemId
	string interfaceIcon
	string itemDesc

	construct(int newId)
		super(newId)
		itemDesc = "You can hire this unit for using it in your group or for defend your buildings."

	function setOnMapUnitId(int id)
		this.onMapUnitId = id

	function setGuardItemId(int id)
		this.guardItemId = id

	function getTooltipExtended() returns string
		return itemDesc + "\n\n" + generateProps()

	override function setAttack(AttackType attackType, int damageBase, int numberofDice, int sidesperDie, real cooldownTime)
		super.setAttack(attackType, damageBase, numberofDice, sidesperDie, cooldownTime)
		let f = damageBase + numberofDice
		let t = damageBase + (numberofDice * sidesperDie)
		addProp("Attack Type", attackType.toObjectString())
		addProp("Damage", f.toString() + " - " + t.toString())
		addProp("DPS", (((f + t) / 2) * cooldownTime).toInt().toString())

	override function setDefence(ArmorType armorType, int hitPoints, int defenceBase, int upgradeBonus)
		super.setDefence(armorType, hitPoints, defenceBase, upgradeBonus)
		addProp("Armor type", armorType.toObjectString())
		addProp("HP", hitPoints.toString())
		addProp("Defence", defenceBase.toString())

	override function setLevel(int lvl)
		super.setLevel(lvl)
		addProp("Level", lvl.toString())

	function setIcon(string name)
		string s = name
		if name.length() < 20 or not name.startsWith("ReplaceableTextures")
			 s = "ReplaceableTextures\\CommandButtons\\" + s
		if not name.endsWith(".blp")
			s += ".blp"
		this.interfaceIcon = s
	
	private function generateProps() returns string
		if props.size() == 0
			return ""
		string tooltip = ""
		let iterator = props.iterator()
		for prop from iterator
			if props.get(prop) != "0"
				tooltip += prop + ": " + COLOR_GOLD.toColorString() + props.get(prop) + "|r\n"
		return tooltip

	function addProp(string name, string val)
		props.put(name, val)

	function getItemId() returns int
		return guardItemId

	function getOnMapId() returns int
		return onMapUnitId

	override function getId() returns int
		return id

	override function getLevel() returns int
		return level