package DropTables

import DropTable
import MapState

import CommonDropTable
import UncommonDropTable
import RareDropTable
import EpicDropTable
import UniqueDropTable
import GuardUnitsRelations

public class DropTableGenerator
	constant lvl = mapState.getIncreasedLevel().toInt()
	DropTable dropTable

	construct()
		dropTable = new DropTable()
		for i = 0 to 22 - lvl
			dropTable.addDropNothing()
		for i = 0 to lvl
			dropTable.addDropItem(commonDropTable.getRandomItem())
		if lvl > 10
			for i = 0 to lvl - 10
				dropTable.addDropItem(uncommonDropTable.getRandomItem())
		if lvl >= 20
			dropTable.addDropItem(uniqueDropTable.getRandomItem())
		if lvl >= 40
			dropTable.addDropItem(rareDropTable.getRandomItem())
		if lvl >= 50
			dropTable.addDropItem(epicDropTable.getRandomItem())

	function getDropTable() returns DropTable
		return dropTable

	function addGuardToDrop(int unitId)
		if unitIdToGuardRelations.has(unitId)
			let guardItemId = unitIdToGuardRelations.get(unitId)
			for i = 0 to 2 + (lvl / 3).toInt()
				dropTable.addDropItem(guardItemId)

	ondestroy
		destroy dropTable