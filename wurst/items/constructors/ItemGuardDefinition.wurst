package ItemGuardDefinition

import HashMap
import ItemObjEditing
import UnitObjEditing
import GuardUnitsRelations

public class ItemGuardDefinition extends ItemDefinition
	constant IterableMap<string, string> props = new IterableMap<string, string>()
	string name
	string desc

	construct(int newId, int unitId)
		super(newId, 'rst1') // TODO: replace to tiny tower
		unitIdToGuardRelations.put(unitId, newId)
		setDescription("You can hire this unit for using it in your group or for defend your buildings.")

	function addProp(string name, string val)
		props.put(name, val)

	override function setName(string name)
		this.name = name
		super.setName(name)
		super.setTooltipBasic("Buy " + name)

	override function setDescription(string desc)
		this.desc = desc
		super.setTooltipExtended(desc + "\n\n" + generateProps())
		super.setDescription(desc)

	function setIcon(string name)
		string s = name
		if name.length() < 20 or not name.startsWith("ReplaceableTextures")
			 s = "ReplaceableTextures\\CommandButtons\\" + s
		if not name.endsWith(".blp")
			s += ".blp"
		setInterfaceIcon(s)

	private function generateProps() returns string
		if props.size() == 0
			return ""
		string tooltip = ""
		let iterator = props.iterator()
		for prop from iterator
			if props.get(prop) != "0"
				tooltip += props.get(prop) + COLOR_GOLD.toColorString() + prop + "|r\n"
		return tooltip

	override function setLevel(int lvl)
		addProp("Level", lvl.toString())
		super.setLevel(lvl)

	function setAttack(AttackType attackType, int damageBase, int numberofDice, int sidesperDie, real cooldownTime)
		let f = damageBase + sidesperDie
		let t = damageBase + (numberofDice * sidesperDie)
		addProp("Attack Type", attackType.toObjectString())
		addProp("Damage", f.toString() + " - " + t.toString())
		addProp("DPS", (((f + t) / 2) * cooldownTime).toInt().toString())
	
	function setDefence(ArmorType armorType, int hitPoints, int defenceBase, int _upgradeBonus)
		addProp("Armor type", armorType.toObjectString())
		addProp("HP", hitPoints.toString())
		addProp("Defence", defenceBase.toString())

	function updateTooltip()
		super.setTooltipExtended(desc + "\n\n" + generateProps())