package Battle

import BattleArea
import Players
import HashSet
import PlayerInstance
import MapState
import EntityBattleFor

public class Battle
	constant playersInBattle = new HashSet<PlayerInstance>()
	BattleArea battleArea
	EntityBattleFor entityBattleFor

	construct(EntityBattleFor entityBattleFor, BattleArea battleArea)
		this.battleArea = battleArea
		this.entityBattleFor = entityBattleFor

	function enterPlayerIntoBattle(player p)
		let playerInstance = playersInstances.get(p.getId())
		if playerInstance != null
			playerInstance.startBattleAt(battleArea.heroStartPoint)
			playersInBattle.add(playerInstance)
		else
			printLog(Loglevel.ERROR, "Player class instance does not found for player " + p.getName() + " and id " + p.getId().toString())

	function exitPlayerFromBattle(PlayerInstance p)
		playersInBattle.remove(p)

	function creepsDefeat(PlayerInstance _p)
		// Implemented in child classes
		
	function creepsVictory()
		// Implemented in child classes

	function getEntityBattleFor() returns EntityBattleFor
		return entityBattleFor

	ondestroy
		// TODO: add points to player?
		mapState.increaseLevel(.5) // .25 orig
		entityBattleFor.setCurrentBattle(null)
		battleArea.clean()
		destroy playersInBattle