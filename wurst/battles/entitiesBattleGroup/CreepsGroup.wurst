package CreepsGroup

import LinkedList
import Creeps
import MapState
import CreepAbilities
import BattleGroup

public class CreepsGroup implements BattleGroup
	constant p = players[PLAYER_NEUTRAL_AGGRESSIVE]
	constant LinkedList<int> unitIds = new LinkedList<int>()
	constant group units = CreateGroup()
	int warlordId
	unit warlord
	unit unitOnMap

	construct(int lvl)
		warlordId = creeps.getRandomWarlordIdOfLevel(lvl)
		let creepId = creeps.getRandomRegularIdOfLevel(lvl)
		for i = 0 to GetRandomInt(2, 8)
			unitIds.add(creepId)

	override function createGroupAtRect(rect r) returns group
		// Make a warlord
		let warlord = createUnit(p, warlordId, r.randomPoint(), angle(220))
		if mapState.getIncreasedLevel() > 5
			warlord.addAbility(getRandomCreepAbility())
		units.addUnit(warlord)
		// Make other creeps
		let iterator = unitIds.iterator()
		for uId from iterator
			units.addUnit(createUnit(p, uId, r.randomPoint(), angle(220)))
		iterator.close()
		return units

	function createWarlordOnMapAtPos(vec2 pos) returns unit
		let unitOnMapId = creeps.warlordsToMapList.get(warlordId)
		unitOnMap = createUnit(p, unitOnMapId, pos, angle(200))
		return unitOnMap

	override function isGroupAlive() returns boolean
		var isAnyAlive = false
		for u in units
			if u.isAlive()
				isAnyAlive = true
		return isAnyAlive

	override function getUnitOnMap() returns unit
		return unitOnMap

	function getWarlordId() returns int
		return warlordId

	ondestroy
		unitOnMap.remove()
		units.destr()
		destroy unitIds
