package BattlesController

import Battle
import HashList
import ClosureTimers
import Players

class BattlesController
	constant activeBattles = new HashList<Battle>()

	construct()
		listenForBattlesStates()

	function add(Battle battle)
		activeBattles.add(battle)

	function listenForBattlesStates()
		doPeriodically(2) cb ->
			let battlesIterator = activeBattles.iterator()
			for battle from battlesIterator
				if battle.playersInBattle.size() == 0
					activeBattles.remove(battle)
					destroy battle
				else
					let playersIterator = battle.playersInBattle.iterator()
					for p from playersIterator
						// When all players is allies, just victory all
						if Players.isAllPlayersAllies(battle.playersInBattle)
						and not battle.battleGroup.isGroupAlive()
							p.battleVictory()
							battle.exitPlayerFromBattle(p)
							// TODO: bug? That ally player will be an owner?
							battle.creepsDefeat(p)
						// When enemies in battle
						else if not p.isAllGroupAlive()
							// player defeat
							p.battleDefeat()
							battle.exitPlayerFromBattle(p)
					playersIterator.close()
			battlesIterator.close()

public constant battlesController = new BattlesController()