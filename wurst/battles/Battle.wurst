package Battle

import OrderIds
import BattleArea
import Players
import BattleGroup
import DropTables
import HashSet
import PlayerInstance
import MapState

public class Battle
	constant playersInBattle = new HashSet<PlayerInstance>()
	BattleArea battleArea
	BattleGroup battleGroup

	construct(BattleGroup battleGroup, BattleArea battleArea)
		this.battleArea = battleArea
		this.battleGroup = battleGroup
		// TODO: get battle area by tile under creep
		battleGroup
			.createGroupAtRect(battleArea.enemiesStartPoint.withRadiusRect(300))
			..pointOrderById(Orders.attack, battleArea.heroStartPoint)

	function dropRandomItemAtPos(vec2 pos) returns item // TODO: Move to other class
		return new DropTableGenerator()
			// ..addGuardToDrop(creepsGroup.warlordId)
			.getDropTable()
			.dropRandomItemAtPos(pos)

	function enterPlayerIntoBattle(player p)
		let playerInstance = playersInstances.get(p.getId())
		if playerInstance != null
			playerInstance.startBattleAt(battleArea.heroStartPoint)
			playersInBattle.add(playerInstance)
		else
			printLog(Loglevel.ERROR, "Player class instance does not found for player " + p.getName() + " and id " + p.getId().toString())

	function exitPlayerFromBattle(PlayerInstance p)
		playersInBattle.remove(p)

	function creepsDefeat(player _p)
		//

	ondestroy
		// TODO: add points to player?
		mapState.increaseLevel(.5) // .25 orig
		battleArea.clean()
		destroy battleGroup
		destroy playersInBattle