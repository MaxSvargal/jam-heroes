package GiantFireball

import ChannelAbilityPreset
import ClosureForGroups
import Abilities
import Projectile
import Objects

constant RealLevelClosure SPELL_RADIUS = lvl -> 128. + lvl * 32
constant RealLevelClosure SPELL_RANGE = lvl -> 500. + lvl * 30
constant SPEED = 16.
constant MISSLE_TYPE = Abilities.redDragonMissile // lordofFlameMissile

constant SPELL_ICON = "BTN_CR_Holylight"
constant SPELL_NAME = "Giant Fireball"
constant SPELL_HOTKEY = "W"
constant SPELL_TT_NORMAL = SPELL_NAME + " [" + SPELL_HOTKEY + "]"
constant SPELL_TT_EXTENDED = "Launches a giant fireball that creates a powerful explosion at the landing point. Damage all units in radius." +
	color(255, 184, 30).toColorString() + "\nDamage formula: (base + (strength * 2) + (intellect * 3)) * level"

public constant GIANT_FIREBALL_ID = compiletime(ABIL_ID_GEN.next())

@compiletime function gen()
	new ChannelAbilityPreset(GIANT_FIREBALL_ID, 20, true)
		..presetIcon(SPELL_ICON)
		..setName(SPELL_NAME)
		..presetHotkey(SPELL_HOTKEY)
		..setTooltipLearn(SPELL_TT_NORMAL)
		..setTooltipLearnExtended(SPELL_TT_EXTENDED)
		..presetTooltipNormal(lvl -> SPELL_TT_NORMAL)
		..presetTooltipNormalExtended(lvl -> SPELL_TT_EXTENDED)
		..presetOption(Option.VISIBLE, true)
		..presetOption(Option.TARGETIMAGE, true)
		..presetTargetTypes(Targettype.POINT)
		..presetAreaofEffect(SPELL_RADIUS)
		..presetCastRange(SPELL_RANGE)
		..presetCooldown(lvl -> 5 - (lvl / 5))
		..presetManaCost(lvl -> 30 + (lvl * 5))
		..presetCastingTime(lvl -> 1.5)
		..setButtonPositionNormalX(1)
		..setButtonPositionNormalY(2)

class GiantFireball extends PhysicsProjectile
	int lvl = 1
	real damage

	construct(int lvl, real damage, vec3 pos, player owner, vec3 target)
		super(pos, 16., owner, pos.angleTo2d(target), MISSLE_TYPE)
		this.lvl = lvl
		this.damage = damage
		fx.setScale(1.5)

		let dist = target.distanceToSq(pos)
		if dist < 512. * 512.
			setTarget(target, max(SPEED * (dist / (512. .squared())), 2))
		else
			setTarget(target, SPEED)

	override function onGroundHit()
		addEffect(Objects.neutralBuildingExplosion, pos)..setScale(1.5).destr()
		forUnitsInRange(pos.toVec2(), SPELL_RADIUS.run(lvl)) u ->
			fx.getDummy().damageTarget(u, damage, ATTACK_TYPE_SIEGE)
		terminate()

init
	EventListener.onPointCast(GIANT_FIREBALL_ID) (unit caster, vec2 pos) ->
		let abilLvl = caster.getAbilityLevel(GIANT_FIREBALL_ID)
		let castPos = caster.getPos().toVec3().add(0,0,48)
		let owner = caster.getOwner()
		let target = pos.withTerrainZ()
		let damage = (caster.getBaseDamage(1) + (caster.getStr(true) * 2) + (caster.getInt(true) * 3)) * abilLvl
		new GiantFireball(abilLvl, damage.toReal(), castPos, owner, target)