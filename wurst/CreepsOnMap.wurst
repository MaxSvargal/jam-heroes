package CreepsOnMap

import UnitIds
import HashList
import ClosureTimers

import CreepCamp
import MapState
import RegionsList

import CreepDamageUpgrade
import CreepHPUpgrade
import CreepDefenceUpgrade

public class CreepsOnMap
	constant positions = new HashList<CreepCamp>()
	construct()
		let g = GetUnitsOfTypeIdAll(UnitIds.lavaspawn)
		for u in g
			let p = new CreepCamp(u.getPos())
			positions.add(p)
			u.remove()
		g.destr()

		doPeriodically(60) cb ->
			let camps = mapState.creepCampsToRestore
			if camps.size() > 0
				real minDistance = 99999
				CreepCamp campToRestore = camps.get(0)
				let iterator = camps.iterator()
				for camp from iterator
					let distance = camp.getPos().distanceTo(bottomOfMap)
					if distance < minDistance
						minDistance = distance
						campToRestore = camp
				iterator.close()
				campToRestore.createNewCampGroup()
				mapState.creepCampsToRestore.remove(campToRestore)

			let lvl = mapState.getIncreasedLevel().toInt()
			let p = players[PLAYER_NEUTRAL_AGGRESSIVE]
			SetPlayerTechResearched(p, CREEP_HP_UPGRADE_ID, lvl)
			SetPlayerTechResearched(p, CREEP_DEFENCE_UPGRADE_ID, lvl)
			SetPlayerTechResearched(p, CREEP_DAMAGE_UPGRADE_ID, lvl)
