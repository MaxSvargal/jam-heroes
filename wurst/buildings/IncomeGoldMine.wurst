package IncomeGoldMine

import UnitObjEditing
import UnitIds
import ObjectIdGenerator
import ClosureTimers
import ObjectIds

public constant INCOME_GOLD_MINE_ID = compiletime(UNIT_ID_GEN.next())

@compiletime function gen()
	new BuildingDefinition(INCOME_GOLD_MINE_ID, UnitIds.goldmine)
		..setName("Gold Mine")
		..setNormalAbilities("")
		..setPathingMap("\\PathTextures\\4x4SimpleSolid.tga")
		..setScalingValue(.9)
		..setHideMinimapDisplay(true)
		..setTargetedAs(commaList(TargetsAllowed.mechanical, TargetsAllowed.structure))
		..setUnitClassification(TargetsAllowed.mechanical)
		..setSightRadiusDay(700)
		..setSightRadiusNight(400)
init
	doPeriodically(30) cb ->
		for i = 0 to bj_MAX_PLAYER_SLOTS - 1
			let p = players[i]
			let g = GetUnitsOfPlayerAndTypeId(p, INCOME_GOLD_MINE_ID)
			let goldAmount = g.size()
			if goldAmount > 0
				p.addGold(goldAmount)
				printTimedToPlayer("Gold income +" + goldAmount.toString(), 10, p)